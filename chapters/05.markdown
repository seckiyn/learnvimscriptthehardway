Sıkı Eşleme
===========

Hazır olun çünkü işler biraz değişmeye başlayacak.

Şimdiye kadar eşleme yapmak için `map`, `nmap`, `vmap` ve `imap` komutlarını
kullandık. Bu komutlar çalışır ancak bir eksi yanları var. Şu komutları
çalıştırın:

    :::vim
    :nmap - dd
    :nmap \ -

Şimdi `\` tuşuna basın (normal modda). Ne oldu?

Vim `\` tuşunu gördüğünde "Hmm şimdi `-` tuşunu kullanmalıyım" diyor. Ama biz
`-` tuşunu çoktan farklı bir şey yapması için eşledik. Vim bunu görüyor "Aaa,
şimdi benim `dd` komutunu çalıştırmam lazım" diyor ve üzerinde bulunduğunuz
satırı siliyor.

Bu komutlarla eşleme yaptığınızda Vim halihazırda tanımlanmış *tüm* eşlemeleri
de dikkate alır. Başta iyi bir şey gibi gelebilir ama bu kötülüğün kendisidir.
Hadi neden olduğunu konuşalım ama ondan önce bu yaptığımız eşlemeleri şu
komutları kullanarak sıfırlayalım:

    :::vim
    :nunmap -
    :nunmap \

Yineleme(Recursion)
---------

Bu komutu çalıştırın.

    :::vim
    :nmap dd O<esc>jddk

Ilk bakışta bunun `dd`yi şuna eşlediğini düşünürüz:

* Bu satırın üzerinde yeni bir satır oluştur.
* Insert modundan çık.
* Aşağı doğru hareket yap.
* Şu anki satırı sil.
* Üzerinden yarattığımız boş satıra git.

Düşününce bunun "şu anki satırı temizle" görevi görmesi lazım. Deneyelim.

Vim siz `dd` tuşuna basar basmaz donacak. Eğer `<c-c>` tuşlarına basarsanız Vim
eski haline döner ancak sayfanızda bir ton boş satır olduğunu göreceksiniz. Ne
oldu?

Bu eşleme aslında *yinelemeli*! `dd` tuşuna bastığınızda Vim şöyle düşünür:

* `dd` eşlenmiş demek ki şu eşlemeyi yap.
    * Yeni bir satır aç.
    * Insert modundan çık.
    * Bir satır aşağı in.
    * `dd` eşlenmiş demek ki şu eşlemeyi yap.
        * Yeni bir satır aç.
        * Insert modundan çık.
        * Bir satır aşağı in.
        * `dd` eşlenmiş demek ki şu eşlemeyi yap.

Bu durumda eşleme asla bitmez! Şimdi gidip bu korkunç şeyi şu komutlar silin:

    :::vim
    :nunmap dd

Yan Etkiler
-----------

`*map`'lerin bir kötü tarafı da yineleme tehlikesidir. Bir diğer kötü tarafı da
eşlemenin kullandığı tuşları kullanan bir plugin yüklediğinizde davranışlarının
değişebilme tehlikesidir.

Yeni bir plugin yüklediğinizde büyük ihtimalle gidip tüm tuşlarını kullanıp,
ezberlemeyeceksiniz. Ezberleseniz bile `~/.vimrc` dosyanıza her seferinde dönüp
teker teker kullandığınız bir eşleme ile çakışıp çakışmadığına bakmanız
gerekecek.

Bu plugin yüklemeyi gereksiz zor ve kolayca yanlış yapılmaya açık hale getirir.
Bunun daha iyi bir yolu olmalı.

Yinelemesiz(Nonrecursive) Eşleme
--------------------------------

Vim offers another set of mapping commands that will *not* take mappings into
account when they perform their actions.  Run these commands:

Vim size eşleme yaptığınızda diğer eşlemeleri göz önüne *almayacak* bir dizi
eşleme komutları verir. Şu komutları çalıştırın.

    :::vim
    :nmap x dd
    :nnoremap \ x

Şimdi `\` tuşuna basın ve ne olduğunu görün.

`\` tuşuna bastığınızda Vim `x` eşlemesini görmezden gelir ve normalde `x` ne
yapıyorsa onu yapar. Şu anki satırı silmek yerine üzerinde bulunduğu karakteri
siler.

Her `*map` komutu için bir `*noremap` karşılığı vardır: `noremap`, `nnoremap`,
`vnoremap` ve `inoremap`.

Peki ne zaman normal versiyonları yerine yinelemesiz versiyonlarını kullanmanız
gerek?

**HER ZAMAN.**

**Hayır, şakası yok, *her zaman*.**

Normal bir `*map` kullanmak bir plugin veya yeni bir eşleme eklemek
istediğinizde hataya davetiye çıkarmak demek. Fazlada 4 karakter ekleyerek
kendinizi bu beladan kurtarabilirsiniz.

Egzersizler
-----------

`~/.vimrc` dosyanıza bugüne kadar eklediğiniz tüm eşlemeleri yinelemeli
versiyonlarından yinelemesiz karşılıklarına çevirin.

`:help unmap` sayfasını oku.
