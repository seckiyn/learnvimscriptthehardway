Yerel Buffer Kısaltmaları
=========================

Önceki bölüm çok uzun ve zor bir konuya değindik yani bu sefer kolay bir şeye
bakalım. Daha önce nasıl yerel buffer eşlemeleri ve ayarları yapmayı öğrendik,
şimdi bu özelliği kısaltmalara da ekleyelim.

`foo` ve `bar` dosyalarınızı tekrar açın ve `foo` dosyasına geçiş yapın ve şu
komutları çalıştırın:

    :::vim
    :iabbrev <buffer> --- &mdash;

Hala `foo` dosyası içindeyken insert moda girip şu yazıyı yazalım:

    :::text
    Hello --- world.

Vim `---` yazısını sizin için değiştirecek. Şimdi `bar` dosyasına geçin ve
deneyin. Bu yazının değiştirilmemesi sizin için bir sürpriz olmayacaktır çünkü
biz kısaltmanın `foo` bufferı için yerel olarak tanımladık.

Otokomutlar ve Kısaltmalar
--------------------------

Hadi bu yerel buffer kısaltmalarını ve otokomutları kullanarak kendimizi küçük
bir "kod parçası" sistemi yapalım.

Şu komutları çalıştırın.

    :::vim
    :autocmd FileType python     :iabbrev <buffer> iff if:<left>
    :autocmd FileType javascript :iabbrev <buffer> iff if ()<left>

Bir Javascript dosyası açın ve `iff` kısaltmasını deneyin. Sonra da bir Python
dosyası açın ve orada da deneyin. Vim gerekli kısaltmaları içinde bulunduğumuz
dosyanın tipine göre değiştirecek.

Egzersizler
-----------

Birkaç tane daha sizin çok kullandığınız dosya tipleri için "kod parçası" kısaltmaları yazın. Bazı göreve talip birkaç tane kelime: çoğu dil için `return`, Javascript için `function`, HTML dosyaları için `&ldquo;` ve `&rdquo;`.

Bu kod parçalarını `~/.vimrc` dosyanıza ekleyin.

Unutmayın: yeni kod parçalarını öğrenmenin en iyi yolu onun eski yolunu etkisiz
hale getirmektir. `:iabbrev <buffer> return NOPENOPENOPE` komutunu çalıştırmak
sizi üstteki kısaltmayı kullanmaya zorlayacak. Yeni yarattığınız kısaltmalar
için "egzersiz" komutlarını da ekleyin.

